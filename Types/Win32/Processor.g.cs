/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                   *
 *   System.Management.Generator.                             *
 *   Any changes made to this file will be overwritten.       *
 *                                                            *
 **************************************************************/
#nullable enable
namespace System.Management.Types.Win32;

public partial record class Processor(ManagementObject ManagementObject) : Base._Object(ManagementObject)
{
    public ushort? Architecture => (ushort?)ManagementObject[nameof(Architecture)];
    public string? AssetTag => (string)ManagementObject[nameof(AssetTag)];
    public uint? Characteristics => (uint?)ManagementObject[nameof(Characteristics)];
    public ushort? CpuStatus => (ushort?)ManagementObject[nameof(CpuStatus)];
    public ushort? CurrentVoltage => (ushort?)ManagementObject[nameof(CurrentVoltage)];
    public uint? ExtClock => (uint?)ManagementObject[nameof(ExtClock)];
    public uint? L2CacheSize => (uint?)ManagementObject[nameof(L2CacheSize)];
    public uint? L2CacheSpeed => (uint?)ManagementObject[nameof(L2CacheSpeed)];
    public uint? L3CacheSize => (uint?)ManagementObject[nameof(L3CacheSize)];
    public uint? L3CacheSpeed => (uint?)ManagementObject[nameof(L3CacheSpeed)];
    public ushort? Level => (ushort?)ManagementObject[nameof(Level)];
    public string? Manufacturer => (string)ManagementObject[nameof(Manufacturer)];
    public uint? NumberOfCores => (uint?)ManagementObject[nameof(NumberOfCores)];
    public uint? NumberOfEnabledCore => (uint?)ManagementObject[nameof(NumberOfEnabledCore)];
    public uint? NumberOfLogicalProcessors => (uint?)ManagementObject[nameof(NumberOfLogicalProcessors)];
    public string? PartNumber => (string)ManagementObject[nameof(PartNumber)];
    public string? ProcessorId => (string)ManagementObject[nameof(ProcessorId)];
    public ushort? ProcessorType => (ushort?)ManagementObject[nameof(ProcessorType)];
    public ushort? Revision => (ushort?)ManagementObject[nameof(Revision)];
    public bool? SecondLevelAddressTranslationExtensions => (bool?)ManagementObject[nameof(SecondLevelAddressTranslationExtensions)];
    public string? SerialNumber => (string)ManagementObject[nameof(SerialNumber)];
    public string? SocketDesignation => (string)ManagementObject[nameof(SocketDesignation)];
    public uint? ThreadCount => (uint?)ManagementObject[nameof(ThreadCount)];
    public string? Version => (string)ManagementObject[nameof(Version)];
    public bool? VirtualizationFirmwareEnabled => (bool?)ManagementObject[nameof(VirtualizationFirmwareEnabled)];
    public bool? VMMonitorModeExtensions => (bool?)ManagementObject[nameof(VMMonitorModeExtensions)];
    public uint? VoltageCaps => (uint?)ManagementObject[nameof(VoltageCaps)];
}
