/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                   *
 *   System.Management.Generator.                             *
 *   Any changes made to this file will be overwritten.       *
 *                                                            *
 **************************************************************/
namespace System.Management.Types.Win32;

public partial record class SystemSlot(ManagementObject ManagementObject) : CIM.Slot(ManagementObject)
{
    /// <summary>
    /// SMBIOS Bus Number.
    /// </summary>
    public uint? BusNumber => (uint?)ManagementObject[nameof(BusNumber)];
    /// <summary>
    /// Status of system slot use.
    /// </summary>
    public ushort? CurrentUsage => (ushort?)ManagementObject[nameof(CurrentUsage)];
    /// <summary>
    /// SMBIOS Device Number.
    /// </summary>
    public uint? DeviceNumber => (uint?)ManagementObject[nameof(DeviceNumber)];
    /// <summary>
    /// SMBIOS Function Number.
    /// </summary>
    public uint? FunctionNumber => (uint?)ManagementObject[nameof(FunctionNumber)];
    /// <summary>
    /// If TRUE, the PCI bus Power Management Enabled (PME) signal is supported by this slot.
    /// </summary>
    public bool? PMESignal => (bool?)ManagementObject[nameof(PMESignal)];
    /// <summary>
    /// SMBIOS Segment Group Number.
    /// </summary>
    public uint? SegmentGroupNumber => (uint?)ManagementObject[nameof(SegmentGroupNumber)];
    /// <summary>
    /// If TRUE, two or more slots share a location on the baseboard, such as a PCI/EISA shared slot.
    /// </summary>
    public bool? Shared => (bool?)ManagementObject[nameof(Shared)];
    /// <summary>
    /// SMBIOS string that identifies the system slot designation of the slot on the motherboard.
    /// </summary>
    public string? SlotDesignation => (string)ManagementObject[nameof(SlotDesignation)];
}
