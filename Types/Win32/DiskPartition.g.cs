/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                    *
 *   System.Management.Generator.                              *
 *   Any changes made to this file will be overwritten.        *
 *                                                            *
 **************************************************************/
namespace System.Management.Types.Win32;

#nullable enable
public partial record class DiskPartition(ManagementObject ManagementObject) : CIM.DiskPartition(ManagementObject)
{
    /// <summary>
    /// Partition is the active partition. The operating system uses the active partition when booting from a hard disk.
    /// </summary>
    public bool? BootPartition => (bool?)ManagementObject[nameof(BootPartition)];
    /// <summary>
    /// Unique identifier of the disk drive and partition, from the rest of the system.
    /// </summary>
    public new string? DeviceID => (string)ManagementObject[nameof(DeviceID)];
    /// <summary>
    /// Index number of the disk containing this partition.
    /// </summary>
    public uint? DiskIndex => (uint?)ManagementObject[nameof(DiskIndex)];
    /// <summary>
    /// Number of hidden sectors in the partition.
    /// </summary>
    public uint? HiddenSectors => (uint?)ManagementObject[nameof(HiddenSectors)];
    /// <summary>
    /// Index number of the partition.
    /// </summary>
    public uint? Index => (uint?)ManagementObject[nameof(Index)];
    /// <summary>
    /// If True, the partition information has changed. When you change a partition (with IOCTL_DISK_SET_DRIVE_LAYOUT), the system uses this property to determine which partitions have changed and need their information rewritten. If TRUE, the partition must be rewritten.
    /// </summary>
    public bool? RewritePartition => (bool?)ManagementObject[nameof(RewritePartition)];
    /// <summary>
    /// Total size of the partition.
    /// </summary>
    public ulong? Size => (ulong?)ManagementObject[nameof(Size)];
    /// <summary>
    /// Starting offset (in bytes) of the partition.
    /// </summary>
    public ulong? StartingOffset => (ulong?)ManagementObject[nameof(StartingOffset)];
    /// <summary>
    /// Type of the partition.
    /// </summary>
    public string? Type => (string)ManagementObject[nameof(Type)];
}
#nullable disable
