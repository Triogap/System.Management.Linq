/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                   *
 *   System.Management.Generator.                             *
 *   Any changes made to this file will be overwritten.       *
 *                                                            *
 **************************************************************/
namespace System.Management.Types.Win32;

public partial record class ScheduledJob(ManagementObject ManagementObject) : CIM.Job(ManagementObject)
{
    /// <summary>
    /// Name of the command, batch program, or binary file (and command-line arguments) that the schedule service uses to invoke the job.
    /// </summary>
    public string? Command => (string)ManagementObject[nameof(Command)];
    /// <summary>
    /// Days of the month when the job is scheduled to run. If a job is scheduled to run on multiple days of the month, these values can be joined in a logical OR. For example, if a job is to run on the 1st and 16th of each month, the value of the DaysOfMonth property would be 1 OR 32768.
    /// </summary>
    public uint? DaysOfMonth => (uint?)ManagementObject[nameof(DaysOfMonth)];
    /// <summary>
    /// Days of the week when a job is scheduled to run. If a job is scheduled to run on multiple days of the week, the values can be joined in a logical OR. For example, if a job is scheduled to run on Mondays, Wednesdays, and Fridays the value of the DaysOfWeek property would be 1 OR 4 OR 16.
    /// </summary>
    public uint? DaysOfWeek => (uint?)ManagementObject[nameof(DaysOfWeek)];
    /// <summary>
    /// Specified job is interactive, which means that a user can give input to a scheduled job while it is executing.
    /// </summary>
    public bool? InteractWithDesktop => (bool?)ManagementObject[nameof(InteractWithDesktop)];
    /// <summary>
    /// Identifying number of the job. It is used by methods as a handle to one job being scheduled on this computer.
    /// </summary>
    public uint? JobId => (uint?)ManagementObject[nameof(JobId)];
    /// <summary>
    /// Status of execution the last time this job was scheduled to run.
    /// </summary>
    public new string? JobStatus => (string)ManagementObject[nameof(JobStatus)];
    /// <summary>
    /// Scheduled job runs repeatedly on the days that the job is scheduled. If False, then the job is run one time.
    /// </summary>
    public bool? RunRepeatedly => (bool?)ManagementObject[nameof(RunRepeatedly)];
    /// <summary>
    /// UTC time to run the job, in the form of "YYYYMMDDHHMMSS.MMMMMM(+-)OOO", where "YYYYMMDD" must be replaced by "********". The replacement is necessary because the scheduling service only allows jobs to be configured to run one time, or run on a day of the month or week. A job cannot be run on a specific date.
    /// </summary>
    public new DateTimeOffset? StartTime => ManagementObject.GetDateTimePropertyValue(nameof(StartTime));
}
