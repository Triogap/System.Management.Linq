/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                   *
 *   System.Management.Generator.                             *
 *   Any changes made to this file will be overwritten.       *
 *                                                            *
 **************************************************************/
#nullable enable
namespace System.Management.Types.Win32;

public partial record class PnPEntity(ManagementObject ManagementObject) : Base._Object(ManagementObject)
{
    /// <summary>
    /// Globally unique identifier (GUID) of this Plug and Play device.
    /// </summary>
    public string? ClassGuid => (string)ManagementObject[nameof(ClassGuid)];
    /// <summary>
    /// A vendor-defined identification string that Setup uses to match a device to an INF file. A device can have a list of compatible IDs associated with it. The compatible IDs should be listed in order of decreasing suitability. If Setup cannot locate an INF file that matches one of a device's hardware IDs, it uses compatible IDs to locate an INF file. A compatible ID has the same format as a HardwareID. For more information, see Windows Driver Kit.
    /// </summary>
    public string[]? CompatibleID => (string[])ManagementObject[nameof(CompatibleID)];
    /// <summary>
    /// A vendor-defined identification string that Setup uses to match a device to an INF file. Normally, a device has an associated list of hardware IDs. An exception is the 1394 bus driver, which does not use hardware IDs. The first hardware ID in the list should be the device ID. The remaining IDs should be listed in order of decreasing suitability.
    /// </summary>
    public string[]? HardwareID => (string[])ManagementObject[nameof(HardwareID)];
    /// <summary>
    /// Name of the manufacturer of the Plug and Play device.
    /// </summary>
    public string? Manufacturer => (string)ManagementObject[nameof(Manufacturer)];
    /// <summary>
    /// Warning
    /// </summary>
    public string? PNPClass => (string)ManagementObject[nameof(PNPClass)];
    /// <summary>
    /// Whether this Plug and Play device is currently in the system.
    /// </summary>
    public bool? Present => (bool?)ManagementObject[nameof(Present)];
    /// <summary>
    /// Name of the service that supports this Plug and Play device. For more information, see Win32_SystemDriverPnPEntity.
    /// </summary>
    public string? Service => (string)ManagementObject[nameof(Service)];
}
