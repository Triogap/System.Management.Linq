/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                   *
 *   System.Management.Generator.                             *
 *   Any changes made to this file will be overwritten.       *
 *                                                            *
 **************************************************************/
namespace System.Management.Types.Win32;

public partial record class PhysicalMemory(ManagementObject ManagementObject) : CIM.PhysicalMemory(ManagementObject)
{
    /// <summary>
    /// SMBIOS - Type 17 - Attributes. Represents the RANK.
    /// </summary>
    public uint? Attributes => (uint?)ManagementObject[nameof(Attributes)];
    /// <summary>
    /// The configured clock speed of the memory device, in megahertz (MHz), or 0, if the speed is unknown.
    /// </summary>
    public uint? ConfiguredClockSpeed => (uint?)ManagementObject[nameof(ConfiguredClockSpeed)];
    /// <summary>
    /// Configured voltage for this device, in millivolts, or 0, if the voltage is unknown.
    /// </summary>
    public uint? ConfiguredVoltage => (uint?)ManagementObject[nameof(ConfiguredVoltage)];
    /// <summary>
    /// Label of the socket or circuit board that holds the memory.
    /// </summary>
    public string? DeviceLocator => (string)ManagementObject[nameof(DeviceLocator)];
    /// <summary>
    /// Unsigned 16-bit integer maximum number of consecutive rows of data that are accessed in a single interleaved transfer from the memory device. If the value is 0 (zero), the memory is not interleaved.
    /// </summary>
    public ushort? InterleaveDataDepth => (ushort?)ManagementObject[nameof(InterleaveDataDepth)];
    /// <summary>
    /// The maximum operating voltage for this device, in millivolts, or 0, if the voltage is unknown.
    /// </summary>
    public uint? MaxVoltage => (uint?)ManagementObject[nameof(MaxVoltage)];
    /// <summary>
    /// The minimum operating voltage for this device, in millivolts, or 0, if the voltage is unknown.
    /// </summary>
    public uint? MinVoltage => (uint?)ManagementObject[nameof(MinVoltage)];
    /// <summary>
    /// The raw SMBIOS memory type. The value of the MemoryType property is a CIM value that is mapped to the SMBIOS value.
    /// </summary>
    public uint? SMBIOSMemoryType => (uint?)ManagementObject[nameof(SMBIOSMemoryType)];
    /// <summary>
    /// Type of physical memory represented.
    /// </summary>
    public ushort? TypeDetail => (ushort?)ManagementObject[nameof(TypeDetail)];
}
