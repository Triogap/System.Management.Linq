/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                   *
 *   System.Management.Generator.                             *
 *   Any changes made to this file will be overwritten.       *
 *                                                            *
 **************************************************************/
#nullable enable
namespace System.Management.Types.Win32;

public partial record class DCOMApplicationSetting(ManagementObject ManagementObject) : COMSetting(ManagementObject)
{
    /// <summary>
    /// Globally unique identifier (GUID) for this DCOM application.
    /// </summary>
    public string? AppID => (string)ManagementObject[nameof(AppID)];
    /// <summary>
    /// Minimum client authentication level required by this COM server. If NULL, the default values are used.
    /// </summary>
    public uint? AuthenticationLevel => (uint?)ManagementObject[nameof(AuthenticationLevel)];
    /// <summary>
    /// Name of the custom surrogate in which the in-process DCOM application is activated. If this value is NULL and the UseSurrogate key is TRUE, then the system provides a surrogate process.
    /// </summary>
    public string? CustomSurrogate => (string)ManagementObject[nameof(CustomSurrogate)];
    /// <summary>
    /// DCOM application retrieves the saved state of the application or begins from the state in which the application is first initialized.
    /// </summary>
    public bool? EnableAtStorageActivation => (bool?)ManagementObject[nameof(EnableAtStorageActivation)];
    /// <summary>
    /// Name for the services provided by the DCOM application.
    /// </summary>
    public string? LocalService => (string)ManagementObject[nameof(LocalService)];
    /// <summary>
    /// Name of the remote server where the application is activated.
    /// </summary>
    public string? RemoteServerName => (string)ManagementObject[nameof(RemoteServerName)];
    /// <summary>
    /// Specific user account under which the application is to be run on activation.
    /// </summary>
    public string? RunAsUser => (string)ManagementObject[nameof(RunAsUser)];
    /// <summary>
    /// Command-line parameters passed to the DCOM application. This is valid only if the application is written as a Windows-based service.
    /// </summary>
    public string? ServiceParameters => (string)ManagementObject[nameof(ServiceParameters)];
    /// <summary>
    /// DCOM application can be activated as an out-of-process server by use of a surrogate executable file.
    /// </summary>
    public bool? UseSurrogate => (bool?)ManagementObject[nameof(UseSurrogate)];
}
