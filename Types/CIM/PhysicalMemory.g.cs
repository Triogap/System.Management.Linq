/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                   *
 *   System.Management.Generator.                             *
 *   Any changes made to this file will be overwritten.       *
 *                                                            *
 **************************************************************/
namespace System.Management.Types.CIM;

public partial record class PhysicalMemory(ManagementObject ManagementObject) : Chip(ManagementObject)
{
    /// <summary>
    /// Labeled bank in which the memory is located. For example, "Bank 0" or "Bank A".
    /// </summary>
    public string? BankLabel => (string)ManagementObject[nameof(BankLabel)];
    /// <summary>
    /// Total capacity of the physical memory, in bytes.
    /// </summary>
    public ulong? Capacity => (ulong?)ManagementObject[nameof(Capacity)];
    /// <summary>
    /// Data width of the physical memory, in bits. A data width of 0 (zero) , and a total width of 8, indicates that the memory is solely used to provide error correction bits.
    /// </summary>
    public ushort? DataWidth => (ushort?)ManagementObject[nameof(DataWidth)];
    public uint? InterleavePosition => (uint?)ManagementObject[nameof(InterleavePosition)];
    /// <summary>
    /// Type of physical memory.
    /// </summary>
    public ushort? MemoryType => (ushort?)ManagementObject[nameof(MemoryType)];
    /// <summary>
    /// Position of the physical memory in a row. For example, if it takes two 8-bit memory devices to form a 16-bit row, then a value of 2 indicates that the memory is the second device. A value of 0 is an invalid value for this property.
    /// </summary>
    public uint? PositionInRow => (uint?)ManagementObject[nameof(PositionInRow)];
    /// <summary>
    /// Speed of the physical memory, in nanoseconds.
    /// </summary>
    public uint? Speed => (uint?)ManagementObject[nameof(Speed)];
    /// <summary>
    /// Total width, in bits, of the physical memory, including check or error correction bits. If there are no error correction bits, the value in this property should match that specified for the DataWidth property.
    /// </summary>
    public ushort? TotalWidth => (ushort?)ManagementObject[nameof(TotalWidth)];
}
