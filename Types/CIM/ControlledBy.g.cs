/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                   *
 *   System.Management.Generator.                             *
 *   Any changes made to this file will be overwritten.       *
 *                                                            *
 **************************************************************/
#nullable enable
namespace System.Management.Types.CIM;

public partial record class ControlledBy(ManagementObject ManagementObject) : DeviceConnection(ManagementObject)
{
    /// <summary>
    /// A CIM_LogicalDevice that represents the controlled device.
    /// </summary>
    public new Base._Object? Dependent => (Base._Object)ManagementObject[nameof(Dependent)];
    /// <summary>
    /// A CIM_Controller that represents the controller.
    /// </summary>
    public new Base._Object? Antecedent => (Base._Object)ManagementObject[nameof(Antecedent)];
    /// <summary>
    /// Indicates whether the controller is actively commanding or accessing the device. This information is necessary when a logical device can be commanded by, or accessed through, multiple controllers.
    /// </summary>
    public ushort? AccessState => (ushort?)ManagementObject[nameof(AccessState)];
    /// <summary>
    /// Number of hard resets issued by the controller. A hard reset returns the device to its initialization or boot-up state. All internal device state information and data are lost.
    /// </summary>
    public uint? NumberOfHardResets => (uint?)ManagementObject[nameof(NumberOfHardResets)];
    /// <summary>
    /// Number of soft resets issued by the controller. A soft reset does not completely clear current device state and data. Exact semantics are dependent on the device and on the protocols and mechanisms used to communicate to it.
    /// </summary>
    public uint? NumberOfSoftResets => (uint?)ManagementObject[nameof(NumberOfSoftResets)];
}
