/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                   *
 *   System.Management.Generator.                             *
 *   Any changes made to this file will be overwritten.       *
 *                                                            *
 **************************************************************/
#nullable enable
namespace System.Management.Types.CIM;

public partial record class Card(ManagementObject ManagementObject) : PhysicalPackage(ManagementObject)
{
    /// <summary>
    /// If TRUE, this card is a motherboard or, more generically, a baseboard in a chassis.
    /// </summary>
    public bool? HostingBoard => (bool?)ManagementObject[nameof(HostingBoard)];
    /// <summary>
    /// Free-form string that describes the ways in which the card is physically unique from other cards. This property only has meaning when the corresponding Boolean property, SpecialRequirements, is set to TRUE.
    /// </summary>
    public string? RequirementsDescription => (string)ManagementObject[nameof(RequirementsDescription)];
    /// <summary>
    /// If TRUE, to function properly, at least one daughterboard or auxiliary card is required.
    /// </summary>
    public bool? RequiresDaughterBoard => (bool?)ManagementObject[nameof(RequiresDaughterBoard)];
    /// <summary>
    /// Free-form string that describes the slot positioning, typical usage, restrictions, individual slot spacings, or other pertinent information for the slots on a card.
    /// </summary>
    public string? SlotLayout => (string)ManagementObject[nameof(SlotLayout)];
    /// <summary>
    /// If TRUE, the card is physically unique from other cards of the same type and, therefore, requires a special slot. For example, a double-wide card requires two slots. Another example is when a certain card can be used for the same general function as other cards, but requires a special slot (extra long, for example); whereas, other cards can be placed in any available slot. If TRUE, the corresponding RequirementsDescription property should specify the nature of the uniqueness or purpose of the card.
    /// </summary>
    public bool? SpecialRequirements => (bool?)ManagementObject[nameof(SpecialRequirements)];
}
