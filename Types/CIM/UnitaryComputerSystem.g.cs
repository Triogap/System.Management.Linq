/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                   *
 *   System.Management.Generator.                             *
 *   Any changes made to this file will be overwritten.       *
 *                                                            *
 **************************************************************/
#nullable enable
namespace System.Management.Types.CIM;

public partial record class UnitaryComputerSystem(ManagementObject ManagementObject) : ComputerSystem(ManagementObject)
{
    /// <summary>
    /// Data needed to find either the initial load device (its key) or the boot service to request the operating system to start. In addition, the load parameters (that is, a path name and parameters) can also be specified.
    /// </summary>
    public string[]? InitialLoadInfo => (string[])ManagementObject[nameof(InitialLoadInfo)];
    /// <summary>
    /// Data that identifies either the initial load device (its key) or the boot service that requested the last operating system load. In addition, the load parameters (that is, a path name and parameters) can also be specified.
    /// </summary>
    public string? LastLoadInfo => (string)ManagementObject[nameof(LastLoadInfo)];
    /// <summary>
    /// If TRUE, the device can be power managed, that is, put into a power-save state. If FALSE, the integer value 1 ("Not Supported") should be the only entry in the PowerManagementCapabilities array.
    /// </summary>
    public bool? PowerManagementSupported => (bool?)ManagementObject[nameof(PowerManagementSupported)];
    /// <summary>
    /// Current power state of the computer system and its associated operating system.
    /// </summary>
    public ushort? PowerState => (ushort?)ManagementObject[nameof(PowerState)];
    /// <summary>
    /// If enabled, the unitary computer system can be reset with hardware (for example, with the power and reset buttons). If disabled, hardware reset is not allowed.
    /// </summary>
    public ushort? ResetCapability => (ushort?)ManagementObject[nameof(ResetCapability)];
}
