/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                   *
 *   System.Management.Generator.                             *
 *   Any changes made to this file will be overwritten.       *
 *                                                            *
 **************************************************************/
#nullable enable
namespace System.Management.Types.CIM;

public partial record class PhysicalElement(ManagementObject ManagementObject) : ManagedSystemElement(ManagementObject)
{
    /// <summary>
    /// Name of the class or subclass used in the creation of an instance. When used with other key properties of the class, this property allows all instances of the class and its subclasses to be uniquely identified.
    /// </summary>
    public string? CreationClassName => (string)ManagementObject[nameof(CreationClassName)];
    /// <summary>
    /// Name of the organization responsible for producing the physical element. For more information, see the Vendor property of CIM_Product.
    /// </summary>
    public string? Manufacturer => (string)ManagementObject[nameof(Manufacturer)];
    /// <summary>
    /// Name by which the physical element is generally known.
    /// </summary>
    public string? Model => (string)ManagementObject[nameof(Model)];
    /// <summary>
    /// Additional data, beyond asset tag information, that can be used to identify a physical element. One example is bar-code data that is associated with an element, which also has an asset tag. Note that if only bar-code data is available, and is unique and able to be used as an element key, this property would be null and the bar-code data would be used as the class key in the Tag property.
    /// </summary>
    public string? OtherIdentifyingInfo => (string)ManagementObject[nameof(OtherIdentifyingInfo)];
    /// <summary>
    /// Part number assigned by the organization responsible for producing or manufacturing the physical element.
    /// </summary>
    public string? PartNumber => (string)ManagementObject[nameof(PartNumber)];
    /// <summary>
    /// If TRUE, the physical element is powered on. Otherwise, it is currently off.
    /// </summary>
    public bool? PoweredOn => (bool?)ManagementObject[nameof(PoweredOn)];
    /// <summary>
    /// Manufacturer-allocated number used to identify the physical element.
    /// </summary>
    public string? SerialNumber => (string)ManagementObject[nameof(SerialNumber)];
    /// <summary>
    /// Stock-keeping unit number for this physical element.
    /// </summary>
    public string? SKU => (string)ManagementObject[nameof(SKU)];
    /// <summary>
    /// Uniquely identifies the physical element and serves as the element's key. This property can contain information, such as asset tag or serial number data. The key for CIM_PhysicalElement is placed very high in the object hierarchy to independently identify the hardware or entity, regardless of physical placement in (or on) cabinets, adapters, and so on. For example, a removable component that can be hot-swapped can be taken from its containing (scoping) package and be temporarily unused. The object still continues to exist and can even be inserted into a different scoping container. The key for a physical element is an arbitrary string that is defined independently of placement or location-oriented hierarchy.
    /// </summary>
    public string? Tag => (string)ManagementObject[nameof(Tag)];
    /// <summary>
    /// Indicates the version of the physical element.
    /// </summary>
    public string? Version => (string)ManagementObject[nameof(Version)];
}
