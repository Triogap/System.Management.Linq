/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                   *
 *   System.Management.Generator.                             *
 *   Any changes made to this file will be overwritten.       *
 *                                                            *
 **************************************************************/
#nullable enable
namespace System.Management.Types.CIM;

public partial record class SoftwareElement(ManagementObject ManagementObject) : LogicalElement(ManagementObject)
{
    /// <summary>
    /// Internal identifier for the compilation of this software element.
    /// </summary>
    public string? BuildNumber => (string)ManagementObject[nameof(BuildNumber)];
    /// <summary>
    /// Code set used by the software element.
    /// </summary>
    public string? CodeSet => (string)ManagementObject[nameof(CodeSet)];
    /// <summary>
    /// Manufacturer's identifier for the software element, often a stock-keeping unit (SKU) or part number.
    /// </summary>
    public string? IdentificationCode => (string)ManagementObject[nameof(IdentificationCode)];
    /// <summary>
    /// Language edition of the software element. The language codes defined in ISO 639 should be used. Where the software element represents multilingual or international versions of a product, the string "multilingual" should be used.
    /// </summary>
    public string? LanguageEdition => (string)ManagementObject[nameof(LanguageEdition)];
    /// <summary>
    /// Manufacturer of the software element.
    /// </summary>
    public string? Manufacturer => (string)ManagementObject[nameof(Manufacturer)];
    /// <summary>
    /// Manufacturer and operating system type for a software element when the TargetOperatingSystem property has a value of 1 ("Other"). When the TargetOperatingSystem property has a value of 1, this property must have a non-null value. For all other TargetOperatingSystem values, this property is null.
    /// </summary>
    public string? OtherTargetOS => (string)ManagementObject[nameof(OtherTargetOS)];
    /// <summary>
    /// Serial number of the software element.
    /// </summary>
    public string? SerialNumber => (string)ManagementObject[nameof(SerialNumber)];
    /// <summary>
    /// Identifier for the software element. It is designed to be used in conjunction with other keys to create a unique representation of this CIM_SoftwareElement.
    /// </summary>
    public string? SoftwareElementID => (string)ManagementObject[nameof(SoftwareElementID)];
    /// <summary>
    /// State of a software element.
    /// </summary>
    public ushort? SoftwareElementState => (ushort?)ManagementObject[nameof(SoftwareElementState)];
    /// <summary>
    /// Operating system environment. The value of this property does not ensure binary executability, more information is needed. The operating system version must be specified using the operating system version check. Also needed, is the architecture on which the operating system runs. The combination of these constructs allows the provider to clearly identify the level of operating system required for a particular software element.
    /// </summary>
    public ushort? TargetOperatingSystem => (ushort?)ManagementObject[nameof(TargetOperatingSystem)];
    /// <summary>
    /// Version of the operation.
    /// </summary>
    public string? Version => (string)ManagementObject[nameof(Version)];
}
