/**************************************************************
 *                                                            *
 *   WARNING: This file is autogenerated by                   *
 *   System.Management.Generator.                             *
 *   Any changes made to this file will be overwritten.       *
 *                                                            *
 **************************************************************/
#nullable enable
namespace System.Management.Types.Base;

public partial record class _EventFilter(ManagementObject ManagementObject) : _IndicationRelated(ManagementObject)
{
    /// <summary>
    /// You can configure an event access security descriptor to allow an event to be delivered only when the local system account generates the event. For more information about creating security descriptor and authorizing access, see Access Control.
    /// </summary>
    public string? EventAccess => (string)ManagementObject[nameof(EventAccess)];
    /// <summary>
    /// Namespace of the event instance used for cross-namespace subscriptions.
    /// </summary>
    public string? EventNamespace => (string)ManagementObject[nameof(EventNamespace)];
    /// <summary>
    /// Unique identifier of an event filter. Because an event filter is only used internally by WMI, it is recommended that you set this property to a globally unique identifier (GUID) converted to a string. However, consumers can use any private scheme for a filter name as long as there is not a conflict with other filters.
    /// </summary>
    public string? Name => (string)ManagementObject[nameof(Name)];
    /// <summary>
    /// Windows Management Instrumentation Query Language (WQL) event query that specifies the set of events for consumer notification, and the specific conditions for notification.
    /// </summary>
    public string? Query => (string)ManagementObject[nameof(Query)];
    /// <summary>
    /// Language used for the query. Because WMI currently supports only WMI Query Language (WQL) as a query language, this property must be set to "WQL".
    /// </summary>
    public string? QueryLanguage => (string)ManagementObject[nameof(QueryLanguage)];
}
